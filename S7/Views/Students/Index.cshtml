@model PagedList.IPagedList<S7.Models.Student>
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Students", FormMethod.Get)) {
    <p>
        Find by Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control" })
        Find by Date: @Html.TextBox("SearchDate", null, htmlAttributes: new { @class = "form-control datepicker", type = "date" })
        <input type="submit" value="Search" class="btn btn-default" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("DoB", "Index", new { sortOrder = ViewBag.DateSort })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm })
        </th>
        <th>
            @Html.ActionLink("Address", "Index", new { sortOrder = ViewBag.AddressSort })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DoB)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.StudentId }) |
                @Html.ActionLink("Details", "Details", new { id = item.StudentId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.StudentId })
            </td>
            <td>
                @Ajax.ActionLink("View  All Student Info", "AllStudent", "Home", new AjaxOptions
   {
       UpdateTargetId = "divAllStudent",
       OnBegin = "fnOnBegin",
       InsertionMode = InsertionMode.Replace,
       HttpMethod = "GET",
       LoadingElementId = "imgloader",
       OnSuccess = "fnSuccess",
       Confirm = "Do you want to get all student info ?????"
   }, new { @class = "btn btn-default" })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


